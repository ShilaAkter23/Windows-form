@model IEnumerable<Project_Shoe_Stock.Models.ShoeModel>
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common

<h2>Shoe models</h2>
<div class="d-flex justify-content-end mb-1">
    @Html.ActionLink("Create New", "Create", "ShoeModels", new {}, new {@class="btn btn-primary btn-sm"})
</div>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Model name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model)
        {
            <tr>
                <td>@m.ModelName</td>
                <td>
                    @Html.ActionLink("Edit","Edit", "ShoeModels", new {id=m.ShoeModelId}, new {@class="btn btn-primary btn-sm"})
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-end">

    @Html.PagedListPager((IPagedList)Model, pg => Url.Action("ModelsTable", "ShoeModels", new { pg = pg }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
    {
        UlElementClasses = new string[] { "pagination", "pagination-sm" },
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
    },
    new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "placeholder" }))
</div>
