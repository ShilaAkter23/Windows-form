@model IEnumerable<Project_Shoe_Stock.Models.Shoe>
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
<h3>Shes</h3>
<table class="table table-bordered">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th>Brand</th>
            <th>Model</th>
            <th>First Introduced</th>
            <th>On Sale?</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var s in Model)
        {
            <tr>
                <td style="width:40px;text-align:center">
                    <button class="btn btn-sm show"><i class="bi bi-chevron-right"></i></button>
                    <button class="btn btn-sm hide" style="display:none"><i class="bi bi-chevron-up"></i></button>
                </td>
                <td style="width:45px;text-align:center"><img src="~/Pictures/@s.Picture" class="rounded-circle" style="width:40px" /></td>
                <td>@s.Brand.BrandName</td>
                <td>@s.ShoeModel.ModelName</td>
                <td>@s.FirstIntroducedOn.ToString("yyyy-MM-dd")</td>
                <td>@(s.OnSale ? "Yes": "No")</td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Shoes", new { id =s.ShoeId}, new {@class="btn btn-primary btn-sm"})
                </td>
            </tr>
            <tr style="display:none">
                <td></td>
                <td colspan="6">
                    <h4>Stocks</h4>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Size</th>
                                <th>Price</th>
                                <th>Quantity</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var t in s.Stocks)
                            {
                                <tr>
                                    <td>@t.Size</td>
                                    <td>@t.Price.ToString("0.00")</td>
                                    <td>@t.Quantity</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-end">

    @Html.PagedListPager((IPagedList)Model, pg => Url.Action("ShoeTable", "Shoes", new { pg = pg }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
    {
        UlElementClasses = new string[] { "pagination", "pagination-sm" },
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
    },
    new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "table-div" }))
</div>
